{:namespaces
 ({:source-url nil,
   :wiki-url "rubiks.core-api.html",
   :name "rubiks.core",
   :doc nil}),
 :vars
 ({:arglists ([{:keys [top front left right back bottom], :as cube}]),
   :name "R",
   :namespace "rubiks.core",
   :source-url nil,
   :raw-source-url nil,
   :wiki-url "/rubiks.core-api.html#rubiks.core/R",
   :doc "Turn right face clockwise.",
   :var-type "function",
   :line 43,
   :file "src/rubiks/core.clj"}
  {:arglists ([{:keys [top front left right back bottom], :as cube}]),
   :name "U",
   :namespace "rubiks.core",
   :source-url nil,
   :raw-source-url nil,
   :wiki-url "/rubiks.core-api.html#rubiks.core/U",
   :doc "Turn top face clockwise.",
   :var-type "function",
   :line 66,
   :file "src/rubiks/core.clj"}
  {:arglists ([{:keys [cube move-history], :as thread}]),
   :name "all-future-threads",
   :namespace "rubiks.core",
   :source-url nil,
   :raw-source-url nil,
   :wiki-url "/rubiks.core-api.html#rubiks.core/all-future-threads",
   :doc
   "Return a set of all possible future threads (one step in advance only).",
   :var-type "function",
   :line 103,
   :file "src/rubiks/core.clj"}
  {:arglists (nil),
   :name "fail-msg-max-attempts",
   :namespace "rubiks.core",
   :source-url nil,
   :raw-source-url nil,
   :wiki-url "/rubiks.core-api.html#rubiks.core/fail-msg-max-attempts",
   :doc "Failure: max attempts reached.",
   :var-type "function",
   :line 113,
   :file "src/rubiks/core.clj"}
  {:arglists ([color]),
   :name "solid-face",
   :namespace "rubiks.core",
   :source-url nil,
   :raw-source-url nil,
   :wiki-url "/rubiks.core-api.html#rubiks.core/solid-face",
   :doc "Return a solid face (a vector) of the given color.",
   :var-type "function",
   :line 13,
   :file "src/rubiks/core.clj"}
  {:file "src/rubiks/core.clj",
   :raw-source-url nil,
   :source-url nil,
   :wiki-url "/rubiks.core-api.html#rubiks.core/solved-cube",
   :namespace "rubiks.core",
   :line 18,
   :var-type "var",
   :doc
   "\nThe order works thusly.  For the :front face:\n\n1 2 3\n4 5 6\n7 8 9\n\nFor the :right, :left, and :back faces, spin the cube around so that you're\nfacing whichever face, and use the same scheme.  Spin the cube as though it\nwere a globe.\n\nFor the :top face, rotate the cube down (as though you were pouring coffee\ninto your lap), and use the same scheme.\n\nFor the :bottom face, same trick only this time you're pouring the coffee\naway from you.\n",
   :name "solved-cube"})}
